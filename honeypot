#!/bin/bash

# Variables
TCPDUMP_FILE=${TCPDUMP_FILE:-"/tmp/tcpdump.pcap"}
TCPDUMP_FILTER=${TCPDUMP_FILTER:-'tcp'}
# Maximum size of file in MiB
TCPDUMP_MAX_SIZE=${TCPDUMP_MAX_SIZE:-200}
TCPDUMP_CRONTAB=${TCPDUMP_CRONTAB:-"* * * * *"}
TCPDUMP_CRONTAB_FILE=${TCPDUMP_CRONTAB_FILE:-"/tmp/honeypot.cron"}

HONEYPOT_NAME=${HONEYPOT_NAME:-$(uuidgen)}
HONEYPOT_TYPE=${HONEYPOT_TYPE:-"general"}
HONEYPOT_SERVER=${SERVER:-"127.0.0.1:8000"}
LOG_PATH=/var/log/honeypot

source tools.sh

# counter = 0

start_tcpdump(){
    debug "Starting tcpdump"
    if [ -f $TCPDUMP_FILE ]; then
        debug "The file '$TCPDUMP_FILE' exits, removing."
        rm $TCPDUMP_FILE
    fi
    # --print
    # -U = buffer each packet insead of each line
    # tcpdump -W 5 -C 10 --packet-buffered -i any -w $TCPDUMP_FILE $TCPDUMP_FILTER 

    tcpdump --packet-buffered -i any -w $TCPDUMP_FILE $TCPDUMP_FILTER 
}

start_inotify(){
    debug "Starting inotify"
    # -qq = for quite without modify
    while inotifywait -qq -e modify "$TCPDUMP_FILE"; do
        actualsize=$(du -m "$TCPDUMP_FILE" | cut -f1)
        debug "Size: $actualsize MiB"
        if [ ! -z $actualsize -a $actualsize -ge $TCPDUMP_MAX_SIZE ]; then
            debug "Size is over $TCPDUMP_MAX_SIZE megabytes"
            send_data
        fi
    done
}

start_crontab(){
    debug "Starting crontab setup"
    echo "$TCPDUMP_CRONTAB TOKEN=$TOKEN ID=$ID TCPDUMP_FILE=$TCPDUMP_FILE ./honeypot send_data" > $TCPDUMP_CRONTAB_FILE
    crontab $TCPDUMP_CRONTAB_FILE
}

send_attack() {
    debug "Sending attack data"
    send attack -H 'Content-Type: application/json' -d '{"data":{"my_login":"TEST"},"attacker":{"source_addr":"192.168.2.4","source_port":20,"mac":"test"}}'
}

send_data() {
    debug "Sending data"
    resp=$(send upload -H "Content-Disposition:inline;filename=tcpdump.pcap" -F "filename=@$TCPDUMP_FILE")
    if [ $resp -eq "201" ];
    then
        kill -15 $(cat tcpdump-pid)
    fi
}

init(){
    debug "Init of the honeypot"
    data=$(curl -s -d "type=$HONEYPOT_TYPE&name=$HONEYPOT_NAME" -X POST http://$HONEYPOT_SERVER/api/honeypots/)
    if [ -z "$data" ]
    then 
        err "Could not get the data."
        exit 1
    fi
    TOKEN=$(echo $data | jq -j '.token')
    ID=$(echo $data | jq -j '.id')
    echo "TOKEN=$TOKEN"
    echo "ID=$ID"
}

start_tcpdump_process(){
    start_tcpdump &
    # start_tcpdump &>> $LOG_PATH/tcpdump.log &
    TCPDUMP_PID="$!"
    echo "$TCPDUMP_PID" > tcpdump-pid
    debug "Started tcpdump process with PID $TCPDUMP_PID"
}

start(){
    # Setup log path
    if [ -d $LOG_PATH ]; then
        debug "Cleanup of logs"
        rm -f $LOG_PATH/*
    else
        mkdir -p $LOG_PATH
    fi

    # Start of tcpdump
    start_tcpdump_process

    # Wait for TCPDUMP_FILE to be created
    sleep .1

    # Start inotify
    start_inotify &
    # start_inotify &>> $LOG_PATH/inotify.log &
    inotify_pid="$!"
    debug "Started inotify process with PID $inotify_pid"

    # Start crontab
    start_crontab

    while true; do
        wait -n $TCPDUMP_PID
        start_tcpdump_process
    done
}

$1 ${@: 2}
